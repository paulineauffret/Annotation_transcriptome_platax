#!/bin/bash
#PBS parameters...

ASSEMBLY=               #path to transcriptome assembly (fasta file)
TRANSDEC=               #path to .transdecoder.pep file (resulting from step 01)
GENE_TRANS_MAP=${ASSEMBLY}.gene_trans_map
TRINITY_HOME=		#path to trinityrnaseq-2.5.1
TRINOTATE_HOME=		#path to Trinotate-Trinotate-v3.1.1
TRINOTATE=${TRINOTATE_HOME}/Trinotate
TRINOTATE_SQLITE=	#path to Trinotate.sqlite (resulting from step 00)
BLASTP_OUTPUT=		#path to blastp.outfmt6 (resulting from step 02)
BLASTX_OUTPUT=		#path to blastx.outfmt6 (resulting from step 02)
PFAM_OUT=		#path to TrinotatePFAM.out (resulting from step 03)
TMHMM_OUT=		#path to tmhmm.out (resulting from step 05)
SIGP_OUT=		#path to signalp.out (resulting from step 04)
RNAMMER_OUT=		#path to .fasta.rnammer.gff file (resulting from step 06)
EVAL="1e-3"
TAG="07_trinotate_loading_results"
OUTPUT_DIRECTORY=       #path to output directory
WORKING_DIRECTORY=${OUTPUT_DIRECTORY}/${TAG}

mkdir -p ${WORKING_DIRECTORY}

cd ${WORKING_DIRECTORY}

#1. Load transcripts and coding regions
$TRINITY_HOME/util/support_scripts/get_Trinity_gene_to_trans_map.pl $ASSEMBLY > $GENE_TRANS_MAP

$TRINOTATE $TRINOTATE_SQLITE init --gene_trans_map $GENE_TRANS_MAP --transcript_fasta $ASSEMBLY --transdecoder_pep $TRANSDEC

#2. Loading BLAST homologies
# load protein hits
$TRINOTATE $TRINOTATE_SQLITE LOAD_swissprot_blastp $BLASTP_OUTPUT

# load transcript hits
$TRINOTATE $TRINOTATE_SQLITE LOAD_swissprot_blastx $BLASTX_OUTPUT

#Optional: load custom database blast hits
# load protein hits
# $TRINOTATE Trinotate.sqlite LOAD_custom_blast --outfmt6 custom_db.blastp.outfmt6 --prog blastp --dbtype custom_db_name

# load transcript hits
# $TRINOTATE Trinotate.sqlite LOAD_custom_blast --outfmt6 custom_db.blastx.outfmt6 --prog blastx --dbtype custom_db_name

#3. Load Pfam domain entries

$TRINOTATE $TRINOTATE_SQLITE LOAD_pfam $PFAM_OUT

#4. Load transmembrane domains

$TRINOTATE $TRINOTATE_SQLITE LOAD_tmhmm $TMHMM_OUT

#5. Load signal peptide predictions

$TRINOTATE $TRINOTATE_SQLITE LOAD_signalp $SIGP_OUT

#6. Load rnammer predictions

$TRINOTATE $TRINOTATE_SQLITE LOAD_rnammer $RNAMMER_OUT

#Trinotate: Output an Annotation Report

$TRINOTATE $TRINOTATE_SQLITE report -E $EVAL > trinotate_annotation_report.xls

#Note, you can threshold the blast and pfam results to be reported by including the options below:
##################################################################
#
#  -E <float>                 maximum E-value for reporting best blast hit
#                             and associated annotations.
#
#  --pfam_cutoff <string>     'DNC' : domain noise cutoff (default)
#                             'DGC' : domain gathering cutoff
#                             'DTC' : domain trusted cutoff
#                             'SNC' : sequence noise cutoff
#                             'SGC' : sequence gathering cutoff
#                             'STC' : sequence trusted cutoff
#
##################################################################

#The output has the following column headers:

#0       #gene_id
#1       transcript_id
#2       sprot_Top_BLASTX_hit
#3       RNAMMER
#4       prot_id
#5       prot_coords
#6       sprot_Top_BLASTP_hit
#7       custom_pombe_pep_BLASTX
#8       custom_pombe_pep_BLASTP
#9       Pfam
#10      SignalP
#11      TmHMM
#12      eggnog
#13      Kegg
#14      gene_ontology_blast
#15      gene_ontology_pfam
#16      transcript
#17      peptide




